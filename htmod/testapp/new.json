[{"token":"text","text":"<!DOCTYPE html>\n<!-- \nObjective\n\nUsers must still be able to do every html operations but do more with out introductions\n\nA template processor is a software that combines a data model with a template to give a result document\n-->\n\n<!--\nit is advisable that {variables} and {context} files should be declared at\nthe top as by default they will be assumed declared at the top, so for\nyour understanding, top is best.\n-->\n\n<!--\nyou shouldbe able to include file\nrelatively to template file\n-->\n\n<!--\nThere are different variable scopes for a specific template\n- global scope\n- block scope\n\nNote that blocks should still have access to parent scopes for variable\nnot overshadowed in the block\n-->\n\n<!--\nVariables declared should be placed in their immediate scope, the system\nmove up the heiracy to search for needed variables\n-->\n\n<!--\nExpected features\n\n***************\n## Variables ##\n***************\n\nWe should be able to create variables\n<t$ name := 'Abdulfatai'>\n\nWe should be able to render variables to page\n<t= $name is $age year hold>\n\nWe should be able to pass variables to functions when rendering\n<t= name|upcase|maxchr:5>\n\nWe should be able to update a variable\n<t$ name := 'Aka'>\n\n****************\n## Evaluation ##\n****************\n\n- composite expressions for evaluation should be enclosed in ()\n- the behave like variables that nust returns a value\n\n\n\n\n- Using function : uses defined functions\n- Includes : include other external files\n- Looping\n- Conditional\n- Assignments : Passing references to sub templates\n- Errors : outputs template script errors\n- Natural Template : Does not break the actual structure of the template\n- Inheritance : Allow to extend for a layout\n-->\n\n"},{"token":"tag","name":"t$","type":"inline","args":"age := 20"},{"token":"text","text":"\n\n<html>\n<head>\n  "},{"token":"tag","name":"t+","type":"inline","args":"'/partials/head'"},{"token":"text","text":"\n</head>\n<body>\n\n  <!-- evaluate an expression -->\n  "},{"token":"tag","name":"t$","type":"inline","args":"age := (age + years)"},{"token":"text","text":"\n\n  <ul>\n    "},{"token":"tag","name":"t*","type":"block","args":"name :in names","children":[{"token":"text","text":"\n      <li>"},{"token":"tag","name":"t=","type":"inline","args":"(name + ' ' + sex)"},{"token":"text","text":" is "},{"token":"tag","name":"t=","type":"inline","args":"age"},{"token":"text","text":" years hold</t></li>\n    "}]},{"token":"text","text":"\n  </ul>\n\n  <h1>What is your age range</h1>\n  \n  "},{"token":"tag","name":"t%","type":"block","args":"age :gt 10 :& age :lt 20","children":[{"token":"text","text":"\n    <h6>I am in Adult group</h6>\n  "}],"siblings":[{"token":"tag","name":"t!%","type":"block","args":"(age :lt 20 :: age :eq 40)","children":[{"token":"text","text":"\n    <h6>I am in Young group</h6>\n  "}]},{"token":"tag","name":"t!","type":"block","args":null,"children":[{"token":"text","text":"\n    <h6>I am in Mid group</h6>\n  "}]}]},{"token":"text","text":"\n  \n  "},{"token":"tag","name":"t*","type":"block","args":"number :in |20, 50|","children":[{"token":"text","text":"\n    <h1>This is number "},{"token":"tag","name":"t=","type":"inline","args":"number"},{"token":"text","text":"</h1>\n  "}]},{"token":"text","text":"\n</body>\n</html>\n"}]